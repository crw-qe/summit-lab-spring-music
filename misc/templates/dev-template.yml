apiVersion: v1
kind: Template
metadata:
  annotations:
    description: The spring-music application
    tags: spring-music
  name: spring-music
objects:
  - kind: RoleBinding
    apiVersion: v1
    metadata:
      labels:
        app: spring-music
      name: default_view
    roleRef:
      name: view
    subjects:
      - kind: ServiceAccount
        name: default
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      labels:
        app: spring-music
      name: spring-music
    spec:
      replicas: 1
      selector:
        deploymentconfig: spring-music
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            app: spring-music
            deploymentconfig: spring-music
        spec:
          containers:
            - image: spring-music
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /actuator/health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 10
              name: spring-music
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 8443
                  protocol: TCP
                - containerPort: 8778
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /actuator/health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 10
    triggers:
      - type: ImageChange
        imageChangeParams:
          containerNames:
            - spring-music
          from:
            kind: ImageStreamTag
            name: "spring-music:latest"
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: spring-music
      labels:
        app: spring-mucis
    spec:
      tags:
        - name: latest
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      labels:
        app: spring-music
      name: spring-music
    spec:
      runPolicy: Serial
      source:
        type: Git
        contextDir: /
        git:
          ref: pipeline
          uri: "https://github.com/edeandrea/summit-lab-spring-music.git"
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: "java:8"
            namespace: openshift
      output:
        to:
          kind: ImageStreamTag
          name: "spring-music:latest"
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      labels:
        build: spring-music-pipeline-git
      name: spring-music-pipeline-git
    spec:
      runPolicy: Serial
      source:
        type: Git
        git:
          uri: "https://github.com/edeandrea/summit-lab-spring-music.git"
          ref: pipeline
      strategy:
        type: JenkinsPipeline
        jenkinsPipelineStrategy:
          jenkinsfilePath: Jenkinsfile
          env:
            - name: NEXUS_URL
              value: "http://nexus.labs-infra.svc:8081"
      triggers:
        - type: ConfigChange
        - type: GitHub
          github:
            secret: lNW-G9fDOk--MYJ3iNK1
        - type: Generic
          generic:
            secret: ZSyQC2Cy7nc6fMxZJMZi
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      labels:
        build: image-quay-image-mover
      name: image-quay-image-mover
    spec:
      runPolicy: Serial
      output:
        pushSecret:
          name: quay
        to:
          kind: DockerImage
          name: "quay.io/edeandrea/spring-music:latest"
      source:
        type: Dockerfile
        dockerfile: "FROM spring-music:latest"
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: spring-music:latest
  - kind: Service
    apiVersion: v1
    metadata:
      name: spring-music
      labels:
        app: spring-music
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: 8443-tcp
          port: 8443
          protocol: TCP
          targetPort: 8443
        - name: 8778-tcp
          port: 8778
          protocol: TCP
          targetPort: 8778
      selector:
        deploymentconfig: spring-music
  - kind: Route
    apiVersion: v1
    metadata:
      labels:
        app: spring-music
      name: spring-music
    spec:
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: spring-music
        weight: 100
